{"name":"Custom-string-parser","body":"<h1>Custom String Parser</h1>\r\n\r\n<p>Use this component if you need to parse any information from any string value which has some <a href=\"http://en.wikipedia.org/wiki/Syntax_(logic)\">syntax logics.</a></p>\r\n\r\n<blockquote><p>The easiest way to parse data from string in python.</p></blockquote>\r\n\r\n<h2>Overview</h2>\r\n\r\n<p><strong>CustomStringParser</strong>, the missing simple string parser for <em>python developers</em>.</p>\r\n\r\n<h3>Usage</h3>\r\n\r\n<h4>Parsing HTML</h4>\r\n\r\n<p><strong>Note: for html based parsing you should consider using <a href=\"http://www.w3schools.com/xpath/\">xpath</a>\r\n</strong></p>\r\n\r\n<p>Imagine you have this kind of content in your <code>string_data</code> with this content:</p>\r\n\r\n<pre><code>&lt;div class=\"section-item\"&gt;\r\n    &lt;div class=\"section-title\"&gt;\r\n        title1\r\n    &lt;/div&gt; &lt;!-- end section-title --&gt;\r\n    &lt;div class=\"section-comments\"&gt;\r\n        15\r\n    &lt;/div&gt; &lt;!-- end section-comments --&gt;\r\n&lt;/div&gt; &lt;!--end section-item--&gt;\r\n&lt;div class=\"section-item\"&gt;\r\n    &lt;div class=\"section-title\"&gt;\r\n        title2\r\n    &lt;/div&gt; &lt;!-- end section-title --&gt;\r\n    &lt;div class=\"section-comments\"&gt;\r\n        16\r\n    &lt;/div&gt; &lt;!-- end section-comments --&gt;\r\n&lt;/div&gt; &lt;!--end section-item--&gt;\r\n&lt;div class=\"section-item\"&gt;\r\n    &lt;div class=\"section-title\"&gt;\r\n            title3\r\n    &lt;/div&gt; &lt;!-- end section-title --&gt;\r\n    &lt;div class=\"section-comments\"&gt;\r\n        17\r\n    &lt;/div&gt; &lt;!-- end section-comments --&gt;\r\n&lt;/div&gt; &lt;!--end section-item--&gt;\r\n</code></pre>\r\n\r\n<p>We need to parse these items:</p>\r\n\r\n<ul>\r\n<li>title</li>\r\n<li>comments count</li>\r\n</ul>\r\n\r\n\r\n<p>Code to parse this looks like this:</p>\r\n\r\n<pre><code>parser = CustomStringParserCore(string_data)\r\nitemParser = ParsingNode('item', '&lt;div class=\"section-item\"&gt;', '&lt;/div&gt; &lt;!--end section-item--&gt;')\r\n\r\ntitleParser = ParsingNode('title', '&lt;div class=\"section-title\"&gt;', '&lt;/div&gt; &lt;!-- end section title --&gt;')\r\ncommentsParser = ParsingNode('comments', '&lt;div class=\"section-comments\"&gt;', '&lt;/div&gt; &lt;!-- end section-comments --&gt;')\r\n# note: our item result will have title and comments inside of it, so we can do this:\r\nitemParser.addParser(titleParser)\r\nitemParser.addParser(commentsParser)\r\n\r\n# add main parser to the parsing core\r\nparser.addParser(itemParser)\r\n\r\n# call the parse\r\nparser.parse()\r\n\r\n&lt;..&gt;\r\n</code></pre>\r\n\r\n<p><strong>output (PrintResults(itemParser.results)):</strong></p>\r\n\r\n<p><em>item</em>:</p>\r\n\r\n<pre><code>&lt;div class=\"section-title\"&gt;\r\n        title1\r\n    &lt;/div&gt; &lt;!-- end section-title --&gt;\r\n    &lt;div class=\"section-comments\"&gt;\r\n        15\r\n    &lt;/div&gt; &lt;!-- end section-comments --&gt;\r\n</code></pre>\r\n\r\n<p><em>title</em>:</p>\r\n\r\n<pre><code>title1\r\n</code></pre>\r\n\r\n<p><em>comments</em>:</p>\r\n\r\n<pre><code>15\r\n</code></pre>\r\n\r\n<p><em>item</em>:</p>\r\n\r\n<pre><code>&lt;div class=\"section-title\"&gt;\r\n        title2\r\n    &lt;/div&gt; &lt;!-- end section-title --&gt;\r\n    &lt;div class=\"section-comments\"&gt;\r\n        16\r\n    &lt;/div&gt; &lt;!-- end section-comments --&gt;\r\n</code></pre>\r\n\r\n<p><em>title</em>:</p>\r\n\r\n<pre><code>title2\r\n</code></pre>\r\n\r\n<p><em>comments</em>:</p>\r\n\r\n<pre><code>16\r\n</code></pre>\r\n\r\n<p><em>item</em>:</p>\r\n\r\n<pre><code>&lt;div class=\"section-title\"&gt;\r\n            title3\r\n    &lt;/div&gt; &lt;!-- end section-title --&gt;\r\n    &lt;div class=\"section-comments\"&gt;\r\n        17\r\n    &lt;/div&gt; &lt;!-- end section-comments --&gt;\r\n</code></pre>\r\n\r\n<p><em>title</em>:</p>\r\n\r\n<pre><code>title3\r\n</code></pre>\r\n\r\n<p><em>comments</em>:</p>\r\n\r\n<pre><code>17\r\n</code></pre>\r\n\r\n<h4>This is very generic, so you can parse practically any structure.</h4>\r\n\r\n<h3>Unit tests</h3>\r\nThis library suppose to be fully unit tested. So if you want to participate keep that in mind.\r\n\r\n<h3>Feature ideas ( not yet implemented )</h3>\r\n* Regex based parsers possibility.\r\n* Grouped regex based parsers possibility.\r\n* XPath based parsers possibility.\r\n* Filtering out results by parser name.\r\n\r\n<h3> Please feel free to improve it if you like :) </h3>\r\n<img src=\"http://img193.imageshack.us/img193/5605/tumblrlznr805hcb1r3zat8.png\"/>\r\n","tagline":"Custom string data parser written in python","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}